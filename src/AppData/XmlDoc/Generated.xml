<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Outpost31</name>
    </assembly>
    <members>
        <member name="P:Outpost31.Core.Avatar.ScriptParameter.SentScriptParam">
            <summary>The original Script Parameter sent from Avatar.</summary>
        </member>
        <member name="M:Outpost31.Core.Avatar.ScriptParameter.Build(System.String)">
            <summary>Builds a new AvatarData data structure.</summary>
            <param name="sentOptObj">The SentOptionObject data structure sent from Avatar.</param>
            <param name="sentScriptParam">The SentScriptParameter sent from Avatar.</param>
            <returns>All of the data/information Tingen needs in order to do work.</returns>
        </member>
        <member name="T:Outpost31.Core.Avatar.OptionObjects">
            <summary>The data structure that is used to pass information between Avatar and the Tingen Web Service.</summary>
            <remarks>
                <para>
                    The OptionObjects class contains the logic for managing OptionObjects, which contain<br />
                    all of the content and metadata of the Avatar form that is sent to the Tingen Web<br />
                    Service.
                </para>
                <para>
                    <b>ERROR CODES</b><br />
                    When an OptionObject is returned to Avatar, it requires one of the following<br />
                    "Error Code" (which is an integer value):
                    <list type="table">
                        <listheader>
                            <term>Error Code</term>
                            <description>Description</description>
                        </listheader>
                        <item>
                            <term>0</term>
                            <description>No action taken</description>
                        </item>
                        <item>
                            <term>1</term>
                            <description>Returns an Error Message with an "Ok" button, and stops further processing of scripts</description>
                        </item>
                        <item>
                            <term>2</term>
                            <description>Returns an Error Message with "OK" and "Cancel" buttons, and stops further scripts the user clicks "Cancel")</description>
                        </item>
                        <item>
                            <term>3</term>
                            <description>Returns an Error Message with "Ok" button</description>
                        </item>
                        <item>
                            <term>4</term>
                            <description>Returns an Error Message with "Yes" and "No" buttons and stops further scripts the user clicks "No")</description>
                        </item>
                        <item>
                            <term>5</term>
                            <description>Returns a URL to be opened in a new browser</description>
                        </item>
                        <item>
                            <term>6</term>
                            <description>Returns a form to be opened in Avatar</description>
                        </item>
                    </list>
                </para>
                <para>
                    The most common Error Codes are:
                    <list type="bullet">
                        <item>
                            <term>1</term>
                            <description>Used when you don't want the user to take an action, such as submitting a form</description>
                        </item>
                        <item>
                            <term>3</term>
                            <description>Used when you would like to notify the user of something</description>
                        </item>
                        <item>
                            <term>4</term>
                            <description>Used when you want warn the user they may want to make changes, and give them the option to stop further processing, or continuing</description>
                        </item>
                    </list>
                </para>
            </remarks><seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObjects.SentOptObj">
            <summary>The original OptionObject sent from Avatar.</summary>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObjects.WorkOptObj">
            <summary>The OptionObject that (is potentially) modified during a Tingen session.</summary>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObjects.ReturnOptObj">
            <summary>The OptionObject that is returned to Avatar.</summary>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObjects.ExeAsm">
            <summary>The executing Assembly name.</summary>
            <remarks>A required component for writing log files, defined here so it can be used throughout the class.</remarks>
        </member>
        <member name="M:Outpost31.Core.Avatar.OptionObjects.ConvertErrorString(System.String)">
            <summary>Converts a human-readable error string to the corresponding OptionObject error value.</summary>
            <param name="errorString">The human-readable error string.</param>
            <returns>An OptionObject Error Code.</returns>
            <remarks>
                <para>
                    In order to make assigning an Error Code a little easier when developing the<br />
                    Tingen Web Service, there is the option of using an "error string" instead of<br />
                    the integer value (which will be converted to the appropriate integer value):
                    <list type="table">
                        <listheader>
                            <term>Error string</term>
                            <description>Error Code</description>
                        </listheader>
                        <item>
                            <term>"clone" or "none or "success"</term>
                            <description>0</description>
                        </item>
                        <item>
                            <term>"error"</term>
                            <description>1</description>
                        </item>
                        <item>
                            <term>"okcancel"</term>
                            <description>2</description>
                        </item>
                        <item>
                            <term>"info"</term>
                            <description>3</description>
                        </item>
                        <item>
                            <term>"yesno"</term>
                            <description>4</description>
                        </item>
                        <item>
                            <term>"openurl"</term>
                            <description>5</description>
                        </item>
                        <item>
                            <term>"openform"</term>
                            <description>6</description>
                        </item>
                    </list>
                    Please see the <see cref="T:Outpost31.Core.Avatar.OptionObjects" /> class documentation for more information about<br />
                    Error Codes.
                </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Avatar.OptionObjects.Finalize(Outpost31.Core.Session.TngnWbsvSession,System.Int32,System.String)">
            <summary>Finalize an OptionObject so it can be returned to Avatar.</summary>
            <param name="tngnSession">The Tingen Session data structure object.</param>
            <param name="errorCode">The OptionObject Error Code.</param>
            <param name="errorMessage">The OptionObject error message.</param>
            <remarks>
                <para>
                    Before an OptionObject can be returned to Avatar, we need to make sure that all of the required components exist and/or are modified correctly.<br />
                </para>
                <para>
                    Please see the <see cref="T:Outpost31.Core.Avatar.OptionObjects" /> class documentation for more information about Error Codes.<br />
                </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Logger.PrimevalLog.Create(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Creates a Primeval log.</summary>
            <param name="assemblyName">The executing assembly name.</param>
            <param name="message">The log message</param>
            <param name="fromClass">The path of the calling class.</param>
            <param name="fromMethod">The path of the calling method</param>
            <param name="line">The line of code</param>
            <!-- Failed to insert some or all of included XML --><include file="XmlDoc/Outpost31.Core.Logger.PrimevalLog_doc.xml" path="Outpost31.Core.Logger.PrimevalLog/Type[@name=&quot;Method&quot;]/Create/*" />
        </member>
        <member name="M:Outpost31.Core.Logger.PrimevalLog.DevelopmentCleanup">
            <summary>Removes old Primeval logs.</summary>
            <remarks>Not currently used.</remarks>
        </member>
        <member name="M:Outpost31.Core.Logger.PrimevalLog.cat_PrimevalHeader(System.String,System.String,System.String,System.String,System.String)">
            <summary>Basic log information</summary>
            <param name="assemblyName">The executing assembly name.</param>
            <param name="callPath">The path of the calling class.</param>
            <param name="callMember">The path of the calling method</param>
            <param name="callLine">The line of code</param>
            <param name="message">The log message</param>
            <remarks>Creates standard log content string.</remarks>
            <returns>The basic log content.</returns>
        </member>
        <member name="M:Outpost31.Core.Runtime.RuntimeSettings.ValidTngnWbsvEnvironments">
            <summary>Tingen Web Service valid environments.</summary>
            <returns>A list of environments that can be used with the Tingen Web Service.</returns>
        </member>
        <member name="M:Outpost31.Core.Runtime.RuntimeSettings.ValidTngnWbsvModes">
            <summary>Valid Tingen Web Service modes.</summary>
            <returns>A dictionary of valid Tingen Web Service modes.</returns>
        </member>
        <member name="T:Outpost31.Core.Configuration.TngnWbsvConfiguration">
            <summary>Runtime setting logic for the Tingen Web Service.</summary>
            <remarks>
                <para>
                    This class is used to set the runtime configurations for the Tingen Web Service.
                </para>
            </remarks><seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvDirectory">
            <summary>Directories required by the Tingen Web Service.</summary>
            <remarks>The Tingen Web Service requires these directories to be present.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvFile">
            <summary>Files required by the Tingen Web Service.</summary>
            <remarks>The Tingen Web Service requires these files to be present.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvDataDirectory">
            <summary>Directories required by the Tingen Web Service.</summary>
            <remarks>The Tingen Web Service requires these directories to be present.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvDataFile">
            <summary>Files required by the Tingen Web Service.</summary>
            <remarks>The Tingen Web Service requires these files to be present.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvVersion">
            <summary>The Tingen Web Service version.</summary>
            <remarks>Pulled from the Executing Assembly.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvBuild">
            <summary>The Tingen Web Service build.</summary>
            <remarks>Pulled from AppData\Runtime\tngn.build.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvEnvironment">
            <summary>The Tingen Web Service environment.</summary>
            <remarks>Pulled from AppData\Runtime\tngn.environment.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.ValidTngnWbsvEnvironments">
            <summary>The list of valid System Codes.</summary>
            <remarks>The Tingen Web Service will only interface with these System Codes.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvMode">
            <summary>The Tingen Web Service mode.</summary>
            <remarks>Pulled from %HostDataPath%\%SystemCode%\Config\Runtime\tngn.mode.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.ValidTngnWbsvModes">
            <summary>The list of valid Tingen Web Service modes.</summary>
            <remarks>These are the only modes that the Tingen Web Service (and Modules) will recognize.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvHostName">
            <summary>The name of the machine running the Tingen Web Service.</summary>
            <remarks>The host (server) name where the Tingen Web Service runs.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvDataPath">
            <summary>The Tingen Web Service host data path.</summary>
            <remarks>Pulled from AppData\Runtime\tngn.hostdatapath.</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.CurrentDate">
            <summary>The current date.</summary>
            <remarks>Today!</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.CurrentTime">
            <summary>The current time.</summary>
            <remarks>Now!</remarks>
        </member>
        <member name="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.ConfigurationSummary">
            <summary>A summary of the runtime settings for exporting.</summary>
        </member>
        <member name="M:Outpost31.Core.Configuration.TngnWbsvConfiguration.New(System.String)">
            <summary>Load the runtime settings for the Tingen Web Service.</summary>
            <param name="tngnVersion">The Tingen Web Service version</param>
            <returns>Runtime settings for the Tingen Web Service.</returns>
            <remarks>
                <para>
                    This method creates a Tingen Web Service configuration object at runtime.<br />
                    <br />
                    Some of these properties are validated against hardcoded values.<br />

                </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Configuration.TngnWbsvConfiguration.ConfigSummary(Outpost31.Core.Configuration.TngnWbsvConfiguration)">
            <summary>The summary of the Tingen Web Service configuration at runtime.</summary>
            <return>A summary of the Tingen Web Service configuration at runtime.</return>
        </member>
        <member name="T:Outpost31.Core.Session.TngnWbsvSession">
            <summary> Session logic for the Tingen Web Service.</summary>
            <remarks>
                Additional information about the TgngSession class TBD.
            </remarks><seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="P:Outpost31.Core.Session.TngnWbsvSession.TngnConfig">
            <summary>The Tingen Web Service configuration.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.TngnWbsvSession.SentOptObj">
            <summary>The original OptionObject sent from Avatar.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.TngnWbsvSession.WorkOptObj">
            <summary>The OptionObject that (is potentially) modified during a Tingen session.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.TngnWbsvSession.ReturnOptObj">
            <summary>The OptionObject that is returned to Avatar. </summary>
        </member>
        <member name="P:Outpost31.Core.Session.TngnWbsvSession.ScriptParam">
            <summary>The script parameter that is passed to the Tingen Web Service.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.TngnWbsvSession.SysCode">
            <summary>The system code that the Tingen Web Service will interface with.</summary>
        </member>
        <member name="M:Outpost31.Core.Session.TngnWbsvSession.New(ScriptLinkStandard.Objects.OptionObject2015,System.String,System.String)">
            <summary>Creates a new Tingen Web Service session object.</summary>
            <param name="sentOptObj" />
            <param name="sentScriptParam" />
            <param name="tngnVersion" />
            <returns>A new Tingen Web Service session object.</returns>
            <remarks>
                Additional information about the TgngSession.New() method TBD.
            </remarks>
        </member>
        <member name="T:Outpost31.Core.Utility.Du.DuFile">
            <summary>Logic related to files input/output.</summary>
        </member>
        <member name="M:Outpost31.Core.Utility.Du.DuFile.ReadLocal(System.String)">
            <summary>Returns the contents or status of a file. </summary>
            <param name="filePath">The path to the file.</param>
            <remarks>
                <para>
                    If the file exists <i>and has content</i>, that content is returned.<br/>
                    <br/>
                    If the file <i>does not exist</i>, or exists <i>but is empty</i>, an error message is returned.
                </para>
            </remarks>
            <returns>The content or status of the file.</returns>
        </member>
        <member name="M:Outpost31.Core.Utility.Du.DuFile.ReadAndVerifyLocal(System.String,System.Collections.Generic.List{System.String})">
            <summary>Returns the contents (if valid) or status of a file. </summary>
            <param name="filePath">The path to the file.</param>
            <param name="validContent">A list of valid content.</param>
            <remarks>
                <para>
                    GetContent() returns the contents or status of the file.<br/>
                    <br/>
                    If the file contains data, that data is checked against the list of valid content.
                </para>
            </remarks>
            <returns>The verified content or status of the file.</returns>
        </member>
        <member name="T:Outpost31.Core.Service.Spin">
            <summary>Startup/shutdown logic for the Tingen Web Service.</summary>
            <remarks>
                <para>
                    This method contains two methods that startup/shutdown the Tingen Web Service:
                    <list type="bullet">
                        <item>
                            <see cref="!:Up(TngnSession, string, OptionObject2015, string)" />
                        </item>
                        <item>
                            <see cref="M:Outpost31.Core.Service.Spin.Down" />
                        </item>
                    </list>
                </para>
                <para>
                    This class doesn't do much actual work, and should remain fairly static. For the<br />
                    most part, it just hands information to  <see href="https://github.com/spectrum-health-systems/Outpost31">Outpost31</see>, where the heavy lifting is done.<br />
                </para>
            </remarks><seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="P:Outpost31.Core.Service.Spin.ExeAsm">
            <summary>The executing Assembly name.</summary>
            <remarks>A required component for writing log files, defined here so it can be used throughout the class.</remarks>
        </member>
        <member name="M:Outpost31.Core.Service.Spin.Up(Outpost31.Core.Session.TngnWbsvSession)">
            <summary>Spin up a new Tingen Web Service session.</summary>
            <param name="tngnSession">The (empty) Tingen Web Service session object.</param>
            <param name="tngnVersion">The Tingen Web Service current version.</param>
            <remarks>
                test
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Service.Spin.Down">
            <summary>Spin down the Tingen Web Service.</summary>
            <remarks>
                test2
            </remarks>
        </member>
        <member name="T:Outpost31.WelcomeToOutpost31">
            <summary>A place for Outpost31 details and stuff.</summary>
            <!-- No matching elements were found for the following include tag --><include file="AppData/XmlDoc/WelcomeToOutpost31.xml" path="WelcomeToOutpost31/Class[@name=&quot;ClassDescription&quot;]/*" />
        </member>
    </members>
</doc>
